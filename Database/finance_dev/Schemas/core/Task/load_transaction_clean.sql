   CREATE TASK finance_dev.core.load_transaction_clean  WAREHOUSE = COMPUTE_WH  SCHEDULE = 'USING CRON 0 8 * * * America/Los_Angeles'  COMMENT = 'Task to load deduplicated transaction data to clean schema daily at 8 AM'  AS  MERGE INTO finance_dev.clean.transaction_clean target USING (SELECT transaction_id, account_id, customer_id, transaction_date, transaction_type, amount, currency_code, status, description, created_at, updated_at, source_system, inserted_by, updated_by FROM finance_dev.core.transaction WHERE created_at >= DATEADD(day, -1, CURRENT_TIMESTAMP()) QUALIFY ROW_NUMBER() OVER (PARTITION BY transaction_id ORDER BY updated_at DESC) = 1) source ON target.transaction_id = source.transaction_id WHEN MATCHED THEN UPDATE SET target.account_id = source.account_id, target.customer_id = source.customer_id, target.transaction_date = source.transaction_date, target.transaction_type = source.transaction_type, target.amount = source.amount, target.currency_code = source.currency_code, target.status = source.status, target.description = source.description, target.created_at = source.created_at, target.updated_at = source.updated_at, target.source_system = source.source_system, target.inserted_by = source.inserted_by, target.updated_by = source.updated_by WHEN NOT MATCHED THEN INSERT (transaction_id, account_id, customer_id, transaction_date, transaction_type, amount, currency_code, status, description, created_at, updated_at, source_system, inserted_by, updated_by) VALUES (source.transaction_id, source.account_id, source.customer_id, source.transaction_date, source.transaction_type, source.amount, source.currency_code, source.status, source.description, source.created_at, source.updated_at, source.source_system, source.inserted_by, source.updated_by) 